## models.py

from django.db import models
from datetime import timedelta


class Categoria(models.Model):
    nome = models.CharField(max_length=100)

    def __str__(self):
        return self.nome


class Piloto(models.Model):
    nome = models.CharField(max_length=100)
    numero_piloto = models.IntegerField(unique=True)
    moto = models.CharField(max_length=100)
    categoria = models.ForeignKey(Categoria, on_delete=models.CASCADE, related_name='pilotos')

    def __str__(self):
        return f'{self.nome} ({self.numero_piloto})'


class RegistrarLargada(models.Model):
    id_volta = models.AutoField(primary_key=True)
    piloto = models.ForeignKey(Piloto, on_delete=models.CASCADE, related_name='largadas')
    horario_largada = models.TimeField(null=True, blank=True)

    def __str__(self):
        return f'Largada: {self.piloto} - {self.horario_largada}'


class RegistrarChegada(models.Model):
    id_volta = models.AutoField(primary_key=True)
    piloto = models.ForeignKey(Piloto, on_delete=models.CASCADE, related_name='chegadas')
    horario_chegada = models.TimeField(null=True, blank=True)

    def __str__(self):
        return f'Chegada: {self.piloto} - {self.horario_chegada}'


class Resultados(models.Model):
    nome = models.CharField(max_length=100)
    numero_piloto = models.IntegerField()
    moto = models.CharField(max_length=100)
    categoria = models.CharField(max_length=100)
    id_volta = models.IntegerField()
    horario_largada = models.TimeField(null=True, blank=True)
    horario_chegada = models.TimeField(null=True, blank=True)
    tempo_volta = models.DurationField(null=True, blank=True)
    tempo_total = models.DurationField(null=True, blank=True)

    def __str__(self):
        return f'{self.nome} ({self.numero_piloto})'

## forms.py
class CadastrarPilotoForm(forms.ModelForm):
    categoria = forms.ModelChoiceField(queryset=Categoria.objects.all())

    class Meta:
        model = Piloto
        fields = ['nome', 'numero_piloto', 'moto', 'categoria']

## views.py

def cadastrar_piloto(request):
    if request.method == 'POST':
        form = CadastrarPilotoForm(request.POST)
        if form.is_valid():
            nome = form.cleaned_data['nome']
            numero_piloto = form.cleaned_data['numero_piloto']
            moto = form.cleaned_data['moto']
            categoria = form.cleaned_data['categoria']

            if Piloto.objects.filter(Q(nome=nome) | Q(numero_piloto=numero_piloto)).exists():
                messages.error(request, 'Já existe um piloto com esse nome ou número.')
            else:
                Piloto.objects.create(
                    nome=nome,
                    numero_piloto=numero_piloto,
                    moto=moto,
                    categoria=categoria
                )
                messages.success(request, 'Piloto cadastrado com sucesso.')
                return redirect('cadastrar_piloto')
    else:
        form = CadastrarPilotoForm()

    return render(request, 'cadastrar_piloto.html', {'form': form})

